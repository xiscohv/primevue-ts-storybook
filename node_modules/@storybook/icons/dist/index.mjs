import React2, { lazy, Suspense } from 'react';

// src/iconList.tsx
var iconList = [
  {
    name: "Images",
    icons: [
      "Photo",
      "Component",
      "Grid",
      "Outline",
      "PhotoDrag",
      "GridAlt",
      "Search",
      "Zoom",
      "ZoomOut",
      "ZoomReset",
      "Eye",
      "EyeClose",
      "Lightning",
      "LightningOff",
      "Contrast",
      "SwitchAlt",
      "Mirror",
      "Grow",
      "PaintBrush",
      "Ruler",
      "Stop",
      "Camera",
      "Video",
      "Speaker",
      "Play",
      "PlayBack",
      "PlayNext",
      "Rewind",
      "FastForward",
      "StopAlt",
      "SideBySide",
      "Stacked",
      "Sun",
      "Moon"
    ]
  },
  {
    name: "Documents",
    icons: [
      "Book",
      "Document",
      "Copy",
      "Category",
      "Folder",
      "Print",
      "GraphLine",
      "Calendar",
      "GraphBar",
      "Menu",
      "MenuReverse",
      "Filter",
      "DocChart",
      "DocList",
      "Drag"
    ]
  },
  {
    name: "Editing",
    icons: [
      "Markup",
      "Bold",
      "Italic",
      "PaperClip",
      "ListOrdered",
      "ListUnordered",
      "Paragraph",
      "Markdown"
    ]
  },
  {
    name: "Git",
    icons: [
      "Repo",
      "Commit",
      "Branch",
      "PullRequest",
      "Merge"
    ]
  },
  {
    name: "OS",
    icons: [
      "Apple",
      "Linux",
      "Ubuntu",
      "Windows",
      "Chrome"
    ]
  },
  {
    name: "Logos",
    icons: [
      "Storybook",
      "AzureDevOps",
      "Bitbucket",
      "Chromatic",
      "ComponentDriven",
      "Discord",
      "Facebook",
      "Figma",
      "GDrive",
      "Github",
      "Gitlab",
      "Google",
      "Graphql",
      "Medium",
      "Redux",
      "Twitter",
      "Youtube",
      "VSCode",
      "Linkedin"
    ]
  },
  {
    name: "Devices",
    icons: [
      "Browser",
      "Tablet",
      "Mobile",
      "Watch",
      "Sidebar",
      "SidebarAlt",
      "SidebarAltToggle",
      "SidebarToggle",
      "BottomBar",
      "BottomBarToggle",
      "CPU",
      "Database",
      "Memory",
      "Structure",
      "Box",
      "Power"
    ]
  },
  {
    name: "CRUD",
    icons: [
      "Edit",
      "Cog",
      "Nut",
      "Wrench",
      "Ellipsis",
      "Wand",
      "Check",
      "Form",
      "BatchDeny",
      "BatchAccept",
      "Controls",
      "Plus",
      "CloseAlt",
      "Cross",
      "Trash",
      "PinAlt",
      "Unpin",
      "Add",
      "Subtract",
      "Close",
      "Delete",
      "Passed",
      "Changed",
      "Failed",
      "Clear",
      "Comment",
      "CommentAdd",
      "RequestChange",
      "Comments",
      "Chat",
      "Lock",
      "Unlock",
      "Key",
      "Outbox",
      "Credit",
      "Button",
      "Type",
      "PointerDefault",
      "PointerHand",
      "Command"
    ]
  },
  {
    name: "Communicate",
    icons: [
      "Info",
      "Question",
      "Support",
      "Alert",
      "AlertAlt",
      "Email",
      "Phone",
      "Link",
      "LinkBroken",
      "Bell",
      "RSS",
      "ShareAlt",
      "Share",
      "JumpTo",
      "CircleHollow",
      "Circle",
      "BookmarkHollow",
      "Bookmark",
      "Diamond",
      "HeartHollow",
      "Heart",
      "StarHollow",
      "Star",
      "Certificate",
      "Verified",
      "ThumbsUp",
      "Shield",
      "Basket",
      "Beaker",
      "Hourglass",
      "Flag",
      "CloudHollow",
      "Cloud",
      "Sticker"
    ]
  },
  {
    name: "Wayfinding",
    icons: [
      "ChevronUp",
      "ChevronDown",
      "ChevronLeft",
      "ChevronRight",
      "ArrowUp",
      "ArrowDown",
      "ArrowLeft",
      "ArrowRight",
      "ArrowSolidUp",
      "ArrowSolidDown",
      "ArrowSolidLeft",
      "ArrowSolidRight",
      "ExpandAlt",
      "Collapse",
      "Expand",
      "Unfold",
      "Transfer",
      "Redirect",
      "Undo",
      "Reply",
      "Sync",
      "Upload",
      "Download",
      "Back",
      "Proceed",
      "Refresh",
      "Globe",
      "Compass",
      "Location",
      "Pin",
      "Time",
      "Dashboard",
      "Timer",
      "Home",
      "Admin",
      "Direction"
    ]
  },
  {
    name: "People",
    icons: [
      "User",
      "UserAlt",
      "UserAdd",
      "Users",
      "Profile",
      "FaceHappy",
      "FaceNeutral",
      "FaceSad",
      "Accessibility",
      "AccessibilityAlt"
    ]
  }
];
var Fallback = ({ size }) => {
  return /* @__PURE__ */ React2.createElement("div", { style: { width: size, height: size } });
};

// src/utils/withSuspense.tsx
function withSuspense(WrappedComponent) {
  function ComponentWithSuspense(props) {
    return /* @__PURE__ */ React2.createElement(Suspense, { fallback: /* @__PURE__ */ React2.createElement(Fallback, { ...props }) }, /* @__PURE__ */ React2.createElement(WrappedComponent, { ...props }));
  }
  return ComponentWithSuspense;
}

// src/Icons.ts
var Photo = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Photo };
  })
);
var Component = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Component };
  })
);
var Grid = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Grid };
  })
);
var Outline = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Outline };
  })
);
var PhotoDrag = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.PhotoDrag };
  })
);
var GridAlt = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.GridAlt };
  })
);
var Search = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Search };
  })
);
var Zoom = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Zoom };
  })
);
var ZoomOut = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.ZoomOut };
  })
);
var ZoomReset = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.ZoomReset };
  })
);
var Eye = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Eye };
  })
);
var EyeClose = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.EyeClose };
  })
);
var Lightning = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Lightning };
  })
);
var LightningOff = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.LightningOff };
  })
);
var Contrast = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Contrast };
  })
);
var SwitchAlt = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.SwitchAlt };
  })
);
var Mirror = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Mirror };
  })
);
var Grow = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Grow };
  })
);
var PaintBrush = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.PaintBrush };
  })
);
var Ruler = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Ruler };
  })
);
var Stop = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Stop };
  })
);
var Camera = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Camera };
  })
);
var Video = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Video };
  })
);
var Speaker = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Speaker };
  })
);
var Play = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Play };
  })
);
var PlayBack = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.PlayBack };
  })
);
var PlayNext = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.PlayNext };
  })
);
var Rewind = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Rewind };
  })
);
var FastForward = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.FastForward };
  })
);
var StopAlt = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.StopAlt };
  })
);
var SideBySide = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.SideBySide };
  })
);
var Stacked = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Stacked };
  })
);
var Sun = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Sun };
  })
);
var Moon = withSuspense(
  lazy(async () => {
    const m = await import('./Images-S2WTXNGG.mjs');
    return { default: m.Moon };
  })
);
var Book = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.Book };
  })
);
var Document = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.Document };
  })
);
var Copy = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.Copy };
  })
);
var Category = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.Category };
  })
);
var Folder = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.Folder };
  })
);
var Print = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.Print };
  })
);
var GraphLine = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.GraphLine };
  })
);
var Calendar = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.Calendar };
  })
);
var GraphBar = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.GraphBar };
  })
);
var Menu = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.Menu };
  })
);
var MenuReverse = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.MenuReverse };
  })
);
var Filter = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.Filter };
  })
);
var DocChart = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.DocChart };
  })
);
var DocList = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.DocList };
  })
);
var Drag = withSuspense(
  lazy(async () => {
    const m = await import('./Documents-SGWAY3KW.mjs');
    return { default: m.Drag };
  })
);
var Markup = withSuspense(
  lazy(async () => {
    const m = await import('./Editing-7QFB6ZMG.mjs');
    return { default: m.Markup };
  })
);
var Bold = withSuspense(
  lazy(async () => {
    const m = await import('./Editing-7QFB6ZMG.mjs');
    return { default: m.Bold };
  })
);
var Italic = withSuspense(
  lazy(async () => {
    const m = await import('./Editing-7QFB6ZMG.mjs');
    return { default: m.Italic };
  })
);
var PaperClip = withSuspense(
  lazy(async () => {
    const m = await import('./Editing-7QFB6ZMG.mjs');
    return { default: m.PaperClip };
  })
);
var ListOrdered = withSuspense(
  lazy(async () => {
    const m = await import('./Editing-7QFB6ZMG.mjs');
    return { default: m.ListOrdered };
  })
);
var ListUnordered = withSuspense(
  lazy(async () => {
    const m = await import('./Editing-7QFB6ZMG.mjs');
    return { default: m.ListUnordered };
  })
);
var Paragraph = withSuspense(
  lazy(async () => {
    const m = await import('./Editing-7QFB6ZMG.mjs');
    return { default: m.Paragraph };
  })
);
var Markdown = withSuspense(
  lazy(async () => {
    const m = await import('./Editing-7QFB6ZMG.mjs');
    return { default: m.Markdown };
  })
);
var Repo = withSuspense(
  lazy(async () => {
    const m = await import('./Git-DZ2D5ZUL.mjs');
    return { default: m.Repo };
  })
);
var Commit = withSuspense(
  lazy(async () => {
    const m = await import('./Git-DZ2D5ZUL.mjs');
    return { default: m.Commit };
  })
);
var Branch = withSuspense(
  lazy(async () => {
    const m = await import('./Git-DZ2D5ZUL.mjs');
    return { default: m.Branch };
  })
);
var PullRequest = withSuspense(
  lazy(async () => {
    const m = await import('./Git-DZ2D5ZUL.mjs');
    return { default: m.PullRequest };
  })
);
var Merge = withSuspense(
  lazy(async () => {
    const m = await import('./Git-DZ2D5ZUL.mjs');
    return { default: m.Merge };
  })
);
var Apple = withSuspense(
  lazy(async () => {
    const m = await import('./OS-YZ2Y4VYS.mjs');
    return { default: m.Apple };
  })
);
var Linux = withSuspense(
  lazy(async () => {
    const m = await import('./OS-YZ2Y4VYS.mjs');
    return { default: m.Linux };
  })
);
var Ubuntu = withSuspense(
  lazy(async () => {
    const m = await import('./OS-YZ2Y4VYS.mjs');
    return { default: m.Ubuntu };
  })
);
var Windows = withSuspense(
  lazy(async () => {
    const m = await import('./OS-YZ2Y4VYS.mjs');
    return { default: m.Windows };
  })
);
var Chrome = withSuspense(
  lazy(async () => {
    const m = await import('./OS-YZ2Y4VYS.mjs');
    return { default: m.Chrome };
  })
);
var Storybook = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Storybook };
  })
);
var AzureDevOps = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.AzureDevOps };
  })
);
var Bitbucket = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Bitbucket };
  })
);
var Chromatic = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Chromatic };
  })
);
var ComponentDriven = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.ComponentDriven };
  })
);
var Discord = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Discord };
  })
);
var Facebook = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Facebook };
  })
);
var Figma = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Figma };
  })
);
var GDrive = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.GDrive };
  })
);
var Github = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Github };
  })
);
var Gitlab = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Gitlab };
  })
);
var Google = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Google };
  })
);
var Graphql = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Graphql };
  })
);
var Medium = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Medium };
  })
);
var Redux = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Redux };
  })
);
var Twitter = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Twitter };
  })
);
var Youtube = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Youtube };
  })
);
var VSCode = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.VSCode };
  })
);
var Linkedin = withSuspense(
  lazy(async () => {
    const m = await import('./Logos-SJTNNI74.mjs');
    return { default: m.Linkedin };
  })
);
var Browser = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.Browser };
  })
);
var Tablet = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.Tablet };
  })
);
var Mobile = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.Mobile };
  })
);
var Watch = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.Watch };
  })
);
var Sidebar = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.Sidebar };
  })
);
var SidebarAlt = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.SidebarAlt };
  })
);
var SidebarAltToggle = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.SidebarAltToggle };
  })
);
var SidebarToggle = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.SidebarToggle };
  })
);
var BottomBar = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.BottomBar };
  })
);
var BottomBarToggle = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.BottomBarToggle };
  })
);
var CPU = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.CPU };
  })
);
var Database = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.Database };
  })
);
var Memory = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.Memory };
  })
);
var Structure = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.Structure };
  })
);
var Box = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.Box };
  })
);
var Power = withSuspense(
  lazy(async () => {
    const m = await import('./Devices-SUYACUPO.mjs');
    return { default: m.Power };
  })
);
var Edit = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Edit };
  })
);
var Cog = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Cog };
  })
);
var Nut = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Nut };
  })
);
var Wrench = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Wrench };
  })
);
var Ellipsis = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Ellipsis };
  })
);
var Wand = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Wand };
  })
);
var Check = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Check };
  })
);
var Form = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Form };
  })
);
var BatchDeny = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.BatchDeny };
  })
);
var BatchAccept = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.BatchAccept };
  })
);
var Controls = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Controls };
  })
);
var Plus = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Plus };
  })
);
var CloseAlt = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.CloseAlt };
  })
);
var Cross = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Cross };
  })
);
var Trash = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Trash };
  })
);
var PinAlt = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.PinAlt };
  })
);
var Unpin = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Unpin };
  })
);
var Add = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Add };
  })
);
var Subtract = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Subtract };
  })
);
var Close = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Close };
  })
);
var Delete = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Delete };
  })
);
var Passed = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Passed };
  })
);
var Changed = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Changed };
  })
);
var Failed = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Failed };
  })
);
var Clear = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Clear };
  })
);
var Comment = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Comment };
  })
);
var CommentAdd = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.CommentAdd };
  })
);
var RequestChange = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.RequestChange };
  })
);
var Comments = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Comments };
  })
);
var Chat = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Chat };
  })
);
var Lock = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Lock };
  })
);
var Unlock = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Unlock };
  })
);
var Key = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Key };
  })
);
var Outbox = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Outbox };
  })
);
var Credit = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Credit };
  })
);
var Button = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Button };
  })
);
var Type = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Type };
  })
);
var PointerDefault = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.PointerDefault };
  })
);
var PointerHand = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.PointerHand };
  })
);
var Command = withSuspense(
  lazy(async () => {
    const m = await import('./CRUD-I5EZL2FS.mjs');
    return { default: m.Command };
  })
);
var Info = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Info };
  })
);
var Question = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Question };
  })
);
var Support = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Support };
  })
);
var Alert = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Alert };
  })
);
var AlertAlt = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.AlertAlt };
  })
);
var Email = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Email };
  })
);
var Phone = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Phone };
  })
);
var Link = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Link };
  })
);
var LinkBroken = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.LinkBroken };
  })
);
var Bell = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Bell };
  })
);
var RSS = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.RSS };
  })
);
var ShareAlt = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.ShareAlt };
  })
);
var Share = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Share };
  })
);
var JumpTo = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.JumpTo };
  })
);
var CircleHollow = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.CircleHollow };
  })
);
var Circle = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Circle };
  })
);
var BookmarkHollow = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.BookmarkHollow };
  })
);
var Bookmark = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Bookmark };
  })
);
var Diamond = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Diamond };
  })
);
var HeartHollow = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.HeartHollow };
  })
);
var Heart = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Heart };
  })
);
var StarHollow = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.StarHollow };
  })
);
var Star = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Star };
  })
);
var Certificate = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Certificate };
  })
);
var Verified = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Verified };
  })
);
var ThumbsUp = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.ThumbsUp };
  })
);
var Shield = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Shield };
  })
);
var Basket = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Basket };
  })
);
var Beaker = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Beaker };
  })
);
var Hourglass = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Hourglass };
  })
);
var Flag = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Flag };
  })
);
var CloudHollow = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.CloudHollow };
  })
);
var Cloud = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Cloud };
  })
);
var Sticker = withSuspense(
  lazy(async () => {
    const m = await import('./Communicate-7JXCND2Z.mjs');
    return { default: m.Sticker };
  })
);
var ChevronUp = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ChevronUp };
  })
);
var ChevronDown = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ChevronDown };
  })
);
var ChevronLeft = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ChevronLeft };
  })
);
var ChevronRight = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ChevronRight };
  })
);
var ArrowUp = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ArrowUp };
  })
);
var ArrowDown = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ArrowDown };
  })
);
var ArrowLeft = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ArrowLeft };
  })
);
var ArrowRight = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ArrowRight };
  })
);
var ArrowSolidUp = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ArrowSolidUp };
  })
);
var ArrowSolidDown = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ArrowSolidDown };
  })
);
var ArrowSolidLeft = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ArrowSolidLeft };
  })
);
var ArrowSolidRight = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ArrowSolidRight };
  })
);
var ExpandAlt = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.ExpandAlt };
  })
);
var Collapse = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Collapse };
  })
);
var Expand = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Expand };
  })
);
var Unfold = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Unfold };
  })
);
var Transfer = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Transfer };
  })
);
var Redirect = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Redirect };
  })
);
var Undo = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Undo };
  })
);
var Reply = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Reply };
  })
);
var Sync = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Sync };
  })
);
var Upload = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Upload };
  })
);
var Download = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Download };
  })
);
var Back = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Back };
  })
);
var Proceed = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Proceed };
  })
);
var Refresh = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Refresh };
  })
);
var Globe = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Globe };
  })
);
var Compass = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Compass };
  })
);
var Location = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Location };
  })
);
var Pin = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Pin };
  })
);
var Time = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Time };
  })
);
var Dashboard = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Dashboard };
  })
);
var Timer = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Timer };
  })
);
var Home = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Home };
  })
);
var Admin = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Admin };
  })
);
var Direction = withSuspense(
  lazy(async () => {
    const m = await import('./Wayfinding-BB4H7CHP.mjs');
    return { default: m.Direction };
  })
);
var User = withSuspense(
  lazy(async () => {
    const m = await import('./People-OD4EV7WZ.mjs');
    return { default: m.User };
  })
);
var UserAlt = withSuspense(
  lazy(async () => {
    const m = await import('./People-OD4EV7WZ.mjs');
    return { default: m.UserAlt };
  })
);
var UserAdd = withSuspense(
  lazy(async () => {
    const m = await import('./People-OD4EV7WZ.mjs');
    return { default: m.UserAdd };
  })
);
var Users = withSuspense(
  lazy(async () => {
    const m = await import('./People-OD4EV7WZ.mjs');
    return { default: m.Users };
  })
);
var Profile = withSuspense(
  lazy(async () => {
    const m = await import('./People-OD4EV7WZ.mjs');
    return { default: m.Profile };
  })
);
var FaceHappy = withSuspense(
  lazy(async () => {
    const m = await import('./People-OD4EV7WZ.mjs');
    return { default: m.FaceHappy };
  })
);
var FaceNeutral = withSuspense(
  lazy(async () => {
    const m = await import('./People-OD4EV7WZ.mjs');
    return { default: m.FaceNeutral };
  })
);
var FaceSad = withSuspense(
  lazy(async () => {
    const m = await import('./People-OD4EV7WZ.mjs');
    return { default: m.FaceSad };
  })
);
var Accessibility = withSuspense(
  lazy(async () => {
    const m = await import('./People-OD4EV7WZ.mjs');
    return { default: m.Accessibility };
  })
);
var AccessibilityAlt = withSuspense(
  lazy(async () => {
    const m = await import('./People-OD4EV7WZ.mjs');
    return { default: m.AccessibilityAlt };
  })
);

export { Accessibility, AccessibilityAlt, Add, Admin, Alert, AlertAlt, Apple, ArrowDown, ArrowLeft, ArrowRight, ArrowSolidDown, ArrowSolidLeft, ArrowSolidRight, ArrowSolidUp, ArrowUp, AzureDevOps, Back, Basket, BatchAccept, BatchDeny, Beaker, Bell, Bitbucket, Bold, Book, Bookmark, BookmarkHollow, BottomBar, BottomBarToggle, Box, Branch, Browser, Button, CPU, Calendar, Camera, Category, Certificate, Changed, Chat, Check, ChevronDown, ChevronLeft, ChevronRight, ChevronUp, Chromatic, Chrome, Circle, CircleHollow, Clear, Close, CloseAlt, Cloud, CloudHollow, Cog, Collapse, Command, Comment, CommentAdd, Comments, Commit, Compass, Component, ComponentDriven, Contrast, Controls, Copy, Credit, Cross, Dashboard, Database, Delete, Diamond, Direction, Discord, DocChart, DocList, Document, Download, Drag, Edit, Ellipsis, Email, Expand, ExpandAlt, Eye, EyeClose, FaceHappy, FaceNeutral, FaceSad, Facebook, Failed, FastForward, Figma, Filter, Flag, Folder, Form, GDrive, Github, Gitlab, Globe, Google, GraphBar, GraphLine, Graphql, Grid, GridAlt, Grow, Heart, HeartHollow, Home, Hourglass, Info, Italic, JumpTo, Key, Lightning, LightningOff, Link, LinkBroken, Linkedin, Linux, ListOrdered, ListUnordered, Location, Lock, Markdown, Markup, Medium, Memory, Menu, MenuReverse, Merge, Mirror, Mobile, Moon, Nut, Outbox, Outline, PaintBrush, PaperClip, Paragraph, Passed, Phone, Photo, PhotoDrag, Pin, PinAlt, Play, PlayBack, PlayNext, Plus, PointerDefault, PointerHand, Power, Print, Proceed, Profile, PullRequest, Question, RSS, Redirect, Redux, Refresh, Reply, Repo, RequestChange, Rewind, Ruler, Search, Share, ShareAlt, Shield, SideBySide, Sidebar, SidebarAlt, SidebarAltToggle, SidebarToggle, Speaker, Stacked, Star, StarHollow, Sticker, Stop, StopAlt, Storybook, Structure, Subtract, Sun, Support, SwitchAlt, Sync, Tablet, ThumbsUp, Time, Timer, Transfer, Trash, Twitter, Type, Ubuntu, Undo, Unfold, Unlock, Unpin, Upload, User, UserAdd, UserAlt, Users, VSCode, Verified, Video, Wand, Watch, Windows, Wrench, Youtube, Zoom, ZoomOut, ZoomReset, iconList };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.mjs.map